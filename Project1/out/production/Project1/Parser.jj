PARSER_BEGIN(Parser)

import java.lang.Character;

public class Parser {
    public static void main(String[] args) throws Exception {
        System.out.println(new Parser(System.in).create());
    }
}

PARSER_END(Parser)

SKIP:  { " " | "\t" | "\n" | "\r"}
TOKEN: {<quote : "\"">}
TOKEN: {<alphanumeric : ["0"-"9"] | ["a"-"z"] | ["A"-"Z"] | "/" | ":" | "." | "+" | "%" | "&" | "_" >}

String create():
{String s;}
{
    "ADD" s=element()
    {return s;}
}

String element():
{String s = "";}
{
    (s=img()) | (header()) | (para()) | (url())
    {return s;}
}

String img():
{String s;}
{
    "IMAGE " "WITH " "SOURCE " <quote> s=sentence() <quote>
    {return "<img src=\"" + s + "\">";}
}

void header():
{}
{
    "HEADING" decorated_text()
}

void para():
{}
{
    "PARAGRAPH" decorated_text()
}

void url():
{}
{
    "LINK" decorated_url()
}

String sentence():
{String s;Token c;}
{
     c= <alphanumeric> s=sentence() {return c.image + s;} | {return "";}
}

void decorated_text():
{}
{
{System.out.println("Text");
}
    (text()) | (color()) | (font()) | ("AND" decorated_text())+
}

void decorated_url():
{}
{
{System.out.println("url");
}
    (decorated_url_part() "AND" decorated_url()) | {}
}

void decorated_url_part():
{}
{
    (text()) | (color()) | (font()) | (link())
}

void link():
{}
{
    "WITH LINK" <quote> sentence() <quote>
}


void text():
{String s;}
{
    "WITH TEXT" <quote> s=sentence() <quote>
    {System.out.println(s);}

}

void color():
{}
{
    "WITH COLOR" <quote> sentence() <quote>
}

void font():
{}
{
    "WITH FONT" <quote> sentence() <quote>
}

